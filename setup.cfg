# EasyMath setup.cfg
# Configuration for tools that don't yet support pyproject.toml

[metadata]
name = easymaths
version = 1.0.0
author = Your Name
author_email = your.email@example.com
description = Natural mathematical expressions for non-programmers
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/conorzen/easymath
project_urls =
    Bug Tracker = https://github.com/conorzen/easymath/issues
    Documentation = https://github.com/conorzen/easymath#readme
    Source Code = https://github.com/conorzen/easymath
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Education
    Intended Audience :: Science/Research
    Topic :: Scientific/Engineering :: Mathematics
    Topic :: Education
    License :: OSI Approved :: MIT License
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.7
    Programming Language :: Python :: 3.8
    Programming Language :: Python :: 3.9
    Programming Language :: Python :: 3.10
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Operating System :: OS Independent

[options]
packages = find:
python_requires = >=3.7
include_package_data = True
zip_safe = False

[options.packages.find]
exclude =
    tests*
    docs*
    examples*

[options.entry_points]
console_scripts =
    easymath = easymath.cli:main

[options.extras_require]
dev =
    pytest>=7.0.0
    pytest-cov>=4.0.0
    black>=22.0.0
    flake8>=5.0.0
    mypy>=1.0.0
    isort>=5.10.0
docs =
    sphinx>=5.0.0
    sphinx-rtd-theme>=1.0.0
test =
    pytest>=7.0.0
    pytest-cov>=4.0.0

# Flake8 configuration
[flake8]
max-line-length = 88
select = E,W,F
ignore = 
    E203,  # whitespace before ':' (conflicts with black)
    E501,  # line too long (handled by black)
    W503,  # line break before binary operator (conflicts with black)
    E701,  # multiple statements on one line (handled by black)
exclude =
    .git,
    __pycache__,
    .pytest_cache,
    .mypy_cache,
    build,
    dist,
    *.egg-info,
    .venv,
    venv,
    .tox,
    docs/_build
per-file-ignores =
    __init__.py: F401  # Allow unused imports in __init__.py
    tests/*.py: F401,F811  # Allow test-specific patterns

# Docstring conventions
docstring-convention = google

# Complexity
max-complexity = 10

# Import order (if not using isort)
import-order-style = google
application-import-names = easymath

# MyPy configuration (backup - prefer pyproject.toml)
[mypy]
python_version = 3.7
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True

[mypy-tests.*]
disallow_untyped_defs = False

# Coverage configuration (backup - prefer pyproject.toml)
[coverage:run]
source = easymath
omit = 
    */tests/*
    */test_*
    setup.py

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
show_missing = True
precision = 2

[coverage:html]
directory = htmlcov

# Tool configuration for older tools
[tool:pytest]
minversion = 6.0
addopts = 
    -ra
    --strict-markers
    --strict-config
    --cov=easymath
    --cov-report=term-missing
    --cov-report=html
testpaths = tests
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests

# Wheel configuration
[bdist_wheel]
universal = 0

# Aliases for common commands
[aliases]
test = pytest
coverage = pytest --cov=easymath --cov-report=html --cov-report=term-missing